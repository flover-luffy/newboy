# 监控系统配置文件 - 针对QQ机器人优化版本
# ================================================================
# 配置说明：本配置针对QQ机器人的实际使用场景进行了优化
# 主要考虑因素：口袋48 API响应特性、用户查询频率、系统资源限制
# ================================================================

# 网络配置 - 针对口袋48 API优化
# 口袋48 API响应较慢，适当增加超时时间
monitor.network.connect.timeout=15000

# 读取超时时间（毫秒）
monitor.network.read.timeout=45000

# 减少重试次数，避免过度请求导致API限制
monitor.network.max.retries=2

# 增加重试延迟，给API服务器缓冲时间
monitor.network.retry.base.delay=2000

# 重试最大延迟（毫秒）
monitor.network.retry.max.delay=15000

# ========== 健康检查配置 ==========
# 允许更多连续失败，因为API偶尔不稳定是正常的
monitor.health.max.consecutive.failures=5

# 减少健康检查频率，降低系统负载
monitor.health.check.interval=600000

# 提高失败率阈值，适应API的不稳定性
monitor.health.failure.rate.threshold=0.7

# 成员失败冷却时间基数（分钟）
monitor.health.failure.cooldown.base=10

# 成员失败最大冷却时间（分钟）
monitor.health.failure.cooldown.max=120

# 增加冷却时间，避免频繁重试
monitor.health.failure.cooldown=600000

# ========== 缓存配置 ==========
# 延长缓存时间，减少重复API调用
monitor.cache.expire.time=30000

# 减少清理频率，提高缓存效率
monitor.cache.cleanup.interval=600000

# 保留更长时间的健康统计数据
monitor.health.stats.retention=172800000

# ========== 监控配置 ==========
# 适当降低状态检查频率
monitor.status.check.interval=90000

# 在生产环境中可考虑关闭详细日志
monitor.logging.verbose=false

# 是否启用性能监控
monitor.performance.enabled=true

# 是否启用健康警告通知
monitor.health.warning.enabled=true

# ========== 通知配置 ==========
# 是否在通知中显示健康度
monitor.notification.show.health=true

# 是否启用系统健康警告
monitor.notification.system.health.warning=true

# 减少警告通知频率，避免打扰用户
monitor.notification.health.warning.interval=3600000

# ========== 高级配置 ==========
# 是否启用自适应检查间隔
monitor.adaptive.interval.enabled=true

# 扩大自适应间隔范围，更好应对负载变化
monitor.adaptive.interval.min=45000

# 自适应间隔最大值（毫秒）
monitor.adaptive.interval.max=600000

# 是否启用批量查询优化
monitor.batch.query.enabled=true

# 增加批量查询大小，提高效率
monitor.batch.query.size=8

# 适当增加批量查询间隔，避免API限制
monitor.batch.query.interval=8000

# 增加批量查询超时时间
monitor.batch.query.timeout=60000

# 限制并发批次数，避免过载
monitor.batch.query.max.concurrent=2

# 是否启用异步处理
monitor.async.processing.enabled=true

# 增加异步线程池大小，提高并发处理能力
monitor.async.thread.pool.size=5